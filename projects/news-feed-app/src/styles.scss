// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$news-feed-app-primary: mat-palette($mat-indigo);
$news-feed-app-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$news-feed-app-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$news-feed-app-theme: mat-light-theme((color: (primary: $news-feed-app-primary,
      accent: $news-feed-app-accent,
      warn: $news-feed-app-warn,
    )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($news-feed-app-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}


:root {
  --color-primary: #3f51b5;
  --color-danger: #ff0000;
  --color-item-menu: #f8f8f8;
  --color-gray: #ddd;
  --color-gray-light: #eee;
  --color-gray-bright: #ffffff;
}

.justify-content-end {
  display: flex;
  justify-content: flex-end;
}

i {
  padding: 5px;
}

.fa {
  font-size: 18px;
  cursor: pointer;
  user-select: none;
}

.fa:hover {
  color: var(--color-danger);
}

.fa-heart {
  color: var(--color-danger);
}

.spacer {
  flex: 1 0 auto;
}

.item-menu {
  grid-area: menu;
  position: fixed;
  top: 90px;
  background: var(--color-item-menu);
}

.item-main {
  grid-area: main;
  display: grid;
}

.grid-side-main {
  display: grid;
  grid-template-areas:
    'menu main main main main main';
  grid-gap: 10px;
  padding: 10px;
  width: 100vw;
  height: 100vh;
}

button {
  margin: 0 10px;
  &.active {
      filter: brightness(120%);
  }
}

.card {
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  transition: 0.3s;
  justify-self: center;
  width: 40%;
  max-height: 460px;
  border-radius: 5px;
  margin: 7px;
}

.card:hover {
  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
}

.card-img {
  width: 100%;
  max-height: 300px;
  border-radius: 5px 5px 0 0;
}

.card-container {
  padding: 2px 16px;
}


// ----------------------------------------------------- side menu -----------------------------------------------------//
ol {

  font: 15px 'trebuchet MS', 'lucida sans';
  padding: 0;
  margin-bottom: 4em;
  text-shadow: 0 1px 0 rgba(255, 255, 255, .5);
}

ol ol {
  margin: 0 0 0 2em;
  /* Add some left margin for inner lists */
}

.rounded-list a,
h3 {
  position: relative;
  display: block;
  padding: .4em .4em .4em 2em;
  *padding: .4em;
  margin: .5em 0;
  background: var(--color-gray);
  color: #444;
  text-decoration: none;
  border-radius: .3em;
  transition: all .3s ease-out;
}

.rounded-list a:hover,
h3:hover {
  background: var(--color-gray-light);
}

.rounded-list a:before {
  content: counter(li);
  counter-increment: li;
}

.rounded-list h3:before {
  content: " ";
}

.rounded-list a:before,
h3:before {
  position: absolute;
  left: -1.3em;
  top: 50%;
  margin-top: -1.3em;
  background: #87ceeb;
  height: 2em;
  width: 2em;
  line-height: 2em;
  border: .3em solid #fff;
  text-align: center;
  font-weight: bold;
  border-radius: 2em;
  transition: all .3s ease-out;
}

// -------------------------------------------------^^^^ side menu ^^^^-------------------------------------------------//
